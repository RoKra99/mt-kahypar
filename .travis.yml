# Travis-CI build script for KaHyPar

language: cpp

# Ubuntu 14.04 Trusty support
sudo: true
dist: bionic

matrix:
  include:
    # gcc 7 - Linux Release Build
    - env:
      - CMAKE_CC="gcc-7"
      - CMAKE_CXX="g++-7"
      - BUILD_TYPE="Release"
      - COV="OFF"
      - KAHYPAR_ENABLE_HEAVY_PREPROCESSING_ASSERTIONS="OFF"
      - KAHYPAR_ENABLE_HEAVY_COARSENING_ASSERTIONS="OFF"
      - KAHYPAR_ENABLE_HEAVY_INITIAL_PARTITIONING_ASSERTIONS="OFF"
      - KAHYPAR_ENABLE_HEAVY_REFINEMENT_ASSERTIONS="OFF"
      - KAHYPAR_ENABLE_NUMA_AWARE_PARTITIONING="OFF"
      os: linux
      addons: &gcc7
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - lcov
            - gcovr
            - libboost-program-options-dev
            - libnuma-dev
            - numactl
            - libtbb-dev
            - libhwloc-dev
            - moreutils
            - linux-tools-common
            - linux-tools-generic

    # gcc 7 - Linux Debug Build
    - env:
       - CMAKE_CC="gcc-7"
       - CMAKE_CXX="g++-7"
       - BUILD_TYPE="Debug"
       - COV="ON"
       - KAHYPAR_ENABLE_HEAVY_PREPROCESSING_ASSERTIONS="ON"
       - KAHYPAR_ENABLE_HEAVY_COARSENING_ASSERTIONS="ON"
       - KAHYPAR_ENABLE_HEAVY_INITIAL_PARTITIONING_ASSERTIONS="ON"
       - KAHYPAR_ENABLE_HEAVY_REFINEMENT_ASSERTIONS="ON"
       - KAHYPAR_ENABLE_NUMA_AWARE_PARTITIONING="OFF"
      os: linux
      addons: *gcc7

install:
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      # install cmake 3.13
      CMAKE_URL="https://cmake.org/files/v3.13/cmake-3.13.0-rc3-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      echo ${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version

before_script:
  # print out some version numbers
  - $CMAKE_CXX --version
  # configure
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build; cd build
  - cmake
      -DCMAKE_BUILD_TYPE="$BUILD_TYPE"
      -DCMAKE_C_COMPILER="$CMAKE_CC"
      -DCMAKE_CXX_COMPILER="$CMAKE_CXX"
      -DKAHYPAR_USE_GCOV="$COV"
      -DCMAKE_C_FLAGS="$COMPILER_FLAGS"
      -DCMAKE_CXX_FLAGS="$COMPILER_FLAGS"
      -DKAHYPAR_ENABLE_HEAVY_PREPROCESSING_ASSERTIONS="$KAHYPAR_ENABLE_HEAVY_PREPROCESSING_ASSERTIONS"
      -DKAHYPAR_ENABLE_HEAVY_COARSENING_ASSERTIONS="$KAHYPAR_ENABLE_HEAVY_COARSENING_ASSERTIONS"
      -DKAHYPAR_ENABLE_HEAVY_INITIAL_PARTITIONING_ASSERTIONS="$KAHYPAR_ENABLE_HEAVY_INITIAL_PARTITIONING_ASSERTIONS"
      -DKAHYPAR_ENABLE_HEAVY_REFINEMENT_ASSERTIONS="$KAHYPAR_ENABLE_HEAVY_REFINEMENT_ASSERTIONS"
      -DKAHYPAR_ENABLE_NUMA_AWARE_PARTITIONING="$KAHYPAR_ENABLE_NUMA_AWARE_PARTITIONING"
      -DKAHYPAR_TRAVIS_BUILD=ON
      $CMAKE_ARGS ..

script:
  - |
    if [[ "$BUILD_TYPE" == "Release" ]]; then
      make KaHyPar;
      make integration_tests;
    else
      make clean all;
    fi

after_success:
  - |
    if [[ "$BUILD_TYPE" == "Debug" && "$COV" == "ON" ]]; then
      cd ${TRAVIS_BUILD_DIR}/build;
      lcov --directory . --capture --output-file coverage.info;
      lcov --remove coverage.info '/usr/*' --output-file coverage.info;
      lcov --list coverage.info;
      gcovr -r ../ -x > report.xml;
      cd ..
      bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
    fi
